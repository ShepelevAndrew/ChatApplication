// <auto-generated />
using System;
using ChatApplication.DAL.Persistent;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace ChatApplication.DAL.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20240710115358_InitialMigration")]
    partial class InitialMigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.20")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("ChatApplication.DAL.Domain.Chat", b =>
                {
                    b.Property<Guid>("ChatId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("ChatId");

                    b.ToTable("Chats", (string)null);
                });

            modelBuilder.Entity("ChatApplication.DAL.Domain.User", b =>
                {
                    b.Property<Guid>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("UserId");

                    b.ToTable("Users", (string)null);
                });

            modelBuilder.Entity("ChatUser", b =>
                {
                    b.Property<Guid>("ConnectedChatsChatId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("UsersInChatUserId")
                        .HasColumnType("uuid");

                    b.HasKey("ConnectedChatsChatId", "UsersInChatUserId");

                    b.HasIndex("UsersInChatUserId");

                    b.ToTable("ChatUser");
                });

            modelBuilder.Entity("ChatUser", b =>
                {
                    b.HasOne("ChatApplication.DAL.Domain.Chat", null)
                        .WithMany()
                        .HasForeignKey("ConnectedChatsChatId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ChatApplication.DAL.Domain.User", null)
                        .WithMany()
                        .HasForeignKey("UsersInChatUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
